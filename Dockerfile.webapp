FROM node:22-alpine AS base

# Install dependencies
FROM base AS dependencies
RUN apk add --no-cache libc6-compat
WORKDIR /app
ENV PNPM_HOME="/pnpm"
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY webapp/package.json ./webapp/
RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
	corepack enable pnpm && pnpm install --frozen-lockfile


# Build
FROM base AS build
WORKDIR /app
COPY --from=dependencies /app/node_modules ./node_modules
COPY --from=dependencies /app/webapp/node_modules ./webapp/node_modules
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY webapp ./webapp
ARG API_BASE_URL
ARG CLOUDINARY_CLOUD_NAME
ENV API_BASE_URL=$API_BASE_URL \
	CLOUDINARY_CLOUD_NAME=$CLOUDINARY_CLOUD_NAME \
	PNPM_HOME="/pnpm"
RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
	corepack enable pnpm \
		&& pnpm webapp build


# Run!
FROM nginx:1.27-alpine AS base
WORKDIR /app
COPY webapp/nginx.conf /etc/nginx/nginx.conf
COPY --from=build /app/webapp/.dist /usr/share/nginx/html
